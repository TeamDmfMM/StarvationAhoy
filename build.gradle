buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'



sourceCompatibility = 1.7
targetCompatibility = 1.7

ext.configFile = file "build.properties"

configFile.withReader {
    def prop = new Properties()
    prop.load(it)
    project.ext.config = new ConfigSlurper().parse prop
}

version = config.mod_version
group= "dmfmm.starvationahoy" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "starvationahoy"

minecraft {

    version = config.minecraft_version + "-" + config.forge_version

    replaceIn "Core/lib/ModInfo.java"
    replace "@VERSION@", "${config.minecraft_version}-${config.mod_version}.${config.build_number}"

    runDir = "run"
	mappings = "snapshot_20161220"
}
version = "${config.minecraft_version}-${config.mod_version}.${config.build_number}"


dependencies {

    //compile files('libs/agricraft-2.0.0-0.10.0-a19.jar')
    compile files('libs/Pam\'s HarvestCraft 1.11.2h.jar')

    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"
      
    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

}

processResources
{
    // exclude xcf files, as they are for development only
    exclude '**/*.xcf'


    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include '*.info'


        // replace version and mcversion
        expand 'mod_version': project.version, 'minecraft_version': project.config.minecraft_version
    }


    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude '**/*.info'
    }
}
